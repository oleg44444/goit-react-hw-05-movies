{"version":3,"file":"static/js/304.ad39077c.chunk.js","mappings":"8SAEaA,EAAW,mCAAG,6GAEAC,EAAAA,EAAAA,IACrB,4GAHqB,cAEjBC,EAFiB,yBAKhBA,EAASC,KAAKC,SALE,oGAAH,qDAUXC,EAAc,mCAAG,WAAMC,GAAN,gGAEHL,EAAAA,EAAAA,IAAA,6CACiBK,EADjB,wCAErB,CACEC,QAAS,CACPC,cACE,gOAPkB,cAEpBN,EAFoB,yBAYnBA,EAASC,MAZU,oGAAH,sDAiBdM,EAAS,mCAAG,WAAMH,GAAN,gGAEEL,EAAAA,EAAAA,IAAA,6CACiBK,EADjB,2BAErB,CACEC,QAAS,CACPC,cACE,gOAPa,cAEfN,EAFe,yBAWdA,EAASC,MAXK,oGAAH,sDAiBTO,EAAY,mCAAG,WAAMJ,GAAN,gFACpBK,EAAU,CACdJ,QAAS,CACPK,OAAQ,mBACRJ,cACE,+NALoB,kBAUDP,EAAAA,EAAAA,IAAA,6CACiBK,EADjB,kCAErBK,GAZsB,cAUlBT,EAVkB,yBAcjBA,EAASC,MAdQ,oGAAH,sDAmBZU,EAAgB,mCAAG,WAAMC,GAAN,gFACxBH,EAAU,CACdJ,QAAS,CACPK,OAAQ,oBAEVG,OAAQ,CACNC,QAAS,mCACTF,MAAAA,IAP0B,kBAYLb,EAAAA,EAAAA,IACrB,4CACAU,GAd0B,cAYtBT,EAZsB,yBAgBrBA,EAASC,MAhBY,sCAkB5Bc,QAAQC,IAAR,MAlB4B,8DAAH,qD,8KC9DhBC,EAAgBC,EAAAA,EAAAA,IAAH,sGAMbC,EAAQD,EAAAA,EAAAA,GAAH,oFAMLE,EAAYF,EAAAA,EAAAA,GAAH,gHAQTG,EAAYH,EAAAA,EAAAA,GAAH,oOAaTI,GAAYJ,EAAAA,EAAAA,GAAOK,EAAAA,GAAPL,CAAH,qEAKTM,EAAaN,EAAAA,EAAAA,IAAH,yDAKVO,EAAaP,EAAAA,EAAAA,EAAH,8E,SCKvB,EAtCa,WACX,OAA4BQ,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAgBjB,OAdAC,EAAAA,EAAAA,YAAU,WAER,IAAMC,EAAS,mCAAG,8GAEKlC,EAAAA,EAAAA,MAFL,OAERG,EAFQ,OAGd2B,EAAU3B,GAHI,gDAKdc,QAAQkB,MAAR,MALc,yDAAH,qDASfD,GACD,GAAE,KAGD,UAACf,EAAD,YACE,SAACE,EAAD,8BACA,SAACC,EAAD,UACGO,EAAOO,KAAI,SAAAC,GAAK,OACf,SAACd,EAAD,WACE,UAACC,EAAD,CAAWc,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMV,GAArD,WACE,SAACL,EAAD,CACEgB,IAAG,0CAAqCL,EAAMM,aAC9CC,IAAKP,EAAMQ,SAEb,SAAClB,EAAD,UAAaU,EAAMQ,YANPR,EAAME,GADP,QAcxB,C","sources":["API/API.js","pages/Home/Home.styled.js","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const fetchMovies = async () => {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/trending/movie/week?language=en-US&api_key=177d4c1777884d0207a8f9260a3ed0b2'\n    );\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const fetchMovieData = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?append_to_response=1&language=en-US`,\n      {\n        headers: {\n          Authorization:\n            'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxNzdkNGMxNzc3ODg0ZDAyMDdhOGY5MjYwYTNlZDBiMiIsInN1YiI6IjY1MzBmODQzMTEwOGE4MDBjOWI1ZDdmOCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.7jYvvySJFvZSG-WbSK1ZGl3FBUiXQ3Hl8nNqDdI8jQE',\n        },\n      }\n    );\n\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const fetchCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`,\n      {\n        headers: {\n          Authorization:\n            'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxNzdkNGMxNzc3ODg0ZDAyMDdhOGY5MjYwYTNlZDBiMiIsInN1YiI6IjY1MzBmODQzMTEwOGE4MDBjOWI1ZDdmOCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.7jYvvySJFvZSG-WbSK1ZGl3FBUiXQ3Hl8nNqDdI8jQE',\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchReviews = async movieId => {\n  const options = {\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxNzdkNGMxNzc3ODg0ZDAyMDdhOGY5MjYwYTNlZDBiMiIsInN1YiI6IjY1MzBmODQzMTEwOGE4MDBjOWI1ZDdmOCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.7jYvvySJFvZSG-WbSK1ZGl3FBUiXQ3Hl8nNqDdI8jQE',\n    },\n  };\n\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const fetchSearchFilms = async query => {\n  const options = {\n    headers: {\n      accept: 'application/json',\n    },\n    params: {\n      api_key: '177d4c1777884d0207a8f9260a3ed0b2',\n      query,\n    },\n  };\n\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/search/movie',\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const HomeContainer = styled.div`\n  font-family: Arial, sans-serif;\n  background-color: #000;\n  color: #fff;\n`;\n\nexport const Title = styled.h1`\n  font-size: 24px;\n  margin-bottom: 20px;\n  color: #fff;\n`;\n\nexport const MovieList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const MovieItem = styled.li`\n  margin: 10px;\n  width: 200px;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\n  border-radius: 8px;\n  overflow: hidden;\n  transition: transform 0.2s;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  display: block;\n  text-decoration: none;\n`;\n\nexport const MovieImage = styled.img`\n  width: 100%;\n  height: auto;\n`;\n\nexport const MovieTitle = styled.p`\n  font-size: 16px;\n  padding: 10px;\n  color: #fff;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom'; // Імпортуємо Link з React Router\nimport { fetchMovies } from 'API/API'; // Переконайтеся, що шлях до вашого модулю API правильний\nimport {\n  MovieLink,\n  MovieItem,\n  MovieList,\n  Title,\n  HomeContainer,\n  MovieTitle,\n  MovieImage,\n} from './Home.styled';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    // Використовуйте async/await для отримання даних зі споживача API\n    const fetchData = async () => {\n      try {\n        const data = await fetchMovies();\n        setMovies(data); // Оновити стан компонента з отриманими фільмами\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <HomeContainer>\n      <Title>Trending today</Title>\n      <MovieList>\n        {movies.map(movie => (\n          <MovieItem key={movie.id}>\n            <MovieLink to={`/movies/${movie.id}`} state={{ from: location }}>\n              <MovieImage\n                src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                alt={movie.title}\n              />\n              <MovieTitle>{movie.title}</MovieTitle>\n            </MovieLink>\n          </MovieItem>\n        ))}\n      </MovieList>\n    </HomeContainer>\n  );\n};\n\nexport default Home;\n"],"names":["fetchMovies","axios","response","data","results","fetchMovieData","movieId","headers","Authorization","fetchCast","fetchReviews","options","accept","fetchSearchFilms","query","params","api_key","console","log","HomeContainer","styled","Title","MovieList","MovieItem","MovieLink","Link","MovieImage","MovieTitle","useState","movies","setMovies","location","useLocation","useEffect","fetchData","error","map","movie","to","id","state","from","src","poster_path","alt","title"],"sourceRoot":""}