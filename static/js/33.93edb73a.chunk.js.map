{"version":3,"file":"static/js/33.93edb73a.chunk.js","mappings":"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","sources":["API/API.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const fetchMovies = async () => {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/trending/movie/week?language=en-US&api_key=177d4c1777884d0207a8f9260a3ed0b2'\n    );\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const fetchMovieData = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?append_to_response=1&language=en-US`,\n      {\n        headers: {\n          Authorization:\n            'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxNzdkNGMxNzc3ODg0ZDAyMDdhOGY5MjYwYTNlZDBiMiIsInN1YiI6IjY1MzBmODQzMTEwOGE4MDBjOWI1ZDdmOCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.7jYvvySJFvZSG-WbSK1ZGl3FBUiXQ3Hl8nNqDdI8jQE',\n        },\n      }\n    );\n\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const fetchCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`,\n      {\n        headers: {\n          Authorization:\n            'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxNzdkNGMxNzc3ODg0ZDAyMDdhOGY5MjYwYTNlZDBiMiIsInN1YiI6IjY1MzBmODQzMTEwOGE4MDBjOWI1ZDdmOCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.7jYvvySJFvZSG-WbSK1ZGl3FBUiXQ3Hl8nNqDdI8jQE',\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchReviews = async movieId => {\n  const options = {\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxNzdkNGMxNzc3ODg0ZDAyMDdhOGY5MjYwYTNlZDBiMiIsInN1YiI6IjY1MzBmODQzMTEwOGE4MDBjOWI1ZDdmOCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.7jYvvySJFvZSG-WbSK1ZGl3FBUiXQ3Hl8nNqDdI8jQE',\n    },\n  };\n\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const fetchSearchFilms = async query => {\n  const options = {\n    headers: {\n      accept: 'application/json',\n    },\n    params: {\n      api_key: '177d4c1777884d0207a8f9260a3ed0b2',\n      query,\n    },\n  };\n\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/search/movie',\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MovieDetailsContainer = styled.div`\n  background-color: #111;\n  color: #fff;\n  padding: 20px;\n`;\n\nexport const BackLink = styled(Link)`\n  text-decoration: none;\n  color: #e50914;\n  font-size: 18px;\n  margin-bottom: 20px;\n  display: inline-block;\n`;\n\nexport const MoviePoster = styled.img`\n  max-width: 100%;\n  height: auto;\n  border-radius: 8px;\n  margin: 0 auto;\n  display: block;\n`;\n\nexport const MovieTitle = styled.h1`\n  font-size: 24px;\n  margin: 20px 0;\n`;\n\nexport const UserScore = styled.p`\n  font-size: 18px;\n  margin: 10px 0;\n`;\n\nexport const Overview = styled.p`\n  font-size: 16px;\n  margin: 20px 0;\n`;\n\nexport const Genres = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nexport const Genre = styled.li`\n  font-size: 16px;\n  margin-bottom: 10px;\n`;\n\nexport const AdditionalInfo = styled.ul`\n  list-style: none;\n  margin-top: 20px;\n`;\n\nexport const AdditionalInfoItem = styled.li`\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\nexport const CastLink = styled(Link)`\n  text-decoration: none;\n  color: #e50914;\n`;\n\nexport const ReviewsLink = styled(Link)`\n  text-decoration: none;\n  color: #e50914;\n`;\n\nexport const LoadingMessage = styled.p`\n  font-size: 20px;\n  text-align: center;\n`;\n","import { useRef, useEffect, useState } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { fetchMovieData } from 'API/API';\nimport {\n  MovieDetailsContainer,\n  BackLink,\n  MoviePoster,\n  MovieTitle,\n  UserScore,\n  Overview,\n  Genres,\n  Genre,\n  AdditionalInfo,\n  AdditionalInfoItem,\n  CastLink,\n  ReviewsLink,\n  LoadingMessage,\n} from './MovieDetails.styled.js';\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  const location = useLocation();\n  const backLocationRef = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const movieData = await fetchMovieData(movieId);\n        setMovie(movieData);\n        console.log(movieData);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <MovieDetailsContainer>\n      <BackLink to={backLocationRef.current}>Go BACK</BackLink>\n      {movie ? (\n        <div>\n          <MoviePoster\n            src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n            alt={movie.title}\n          />\n          <MovieTitle>{movie.title}</MovieTitle>\n          <UserScore>User score: {movie.vote_average}</UserScore>\n          <h2>Overview </h2>\n          <Overview>{movie.overview}</Overview>\n          <h3>Genres</h3>\n          <Genres>\n            {movie.genres.map(genre => (\n              <Genre key={genre.id}>{genre.name}</Genre>\n            ))}\n          </Genres>\n\n          <AdditionalInfo>\n            Additional information\n            <AdditionalInfoItem>\n              <CastLink to=\"cast\" state={{ from: location }}>\n                Cast\n              </CastLink>\n            </AdditionalInfoItem>\n            <li>\n              <ReviewsLink to=\"reviews\" state={{ from: location }}>\n                Reviews\n              </ReviewsLink>\n            </li>\n          </AdditionalInfo>\n          <Outlet />\n        </div>\n      ) : (\n        <LoadingMessage>Loading...</LoadingMessage>\n      )}\n    </MovieDetailsContainer>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["fetchMovies","axios","response","data","results","fetchMovieData","movieId","headers","Authorization","fetchCast","fetchReviews","options","accept","fetchSearchFilms","query","params","api_key","console","log","MovieDetailsContainer","styled","BackLink","Link","MoviePoster","MovieTitle","UserScore","Overview","Genres","Genre","AdditionalInfo","AdditionalInfoItem","CastLink","ReviewsLink","LoadingMessage","useParams","useState","movie","setMovie","location","useLocation","backLocationRef","useRef","state","from","useEffect","fetchData","movieData","error","to","current","src","poster_path","alt","title","vote_average","overview","genres","map","genre","name","id"],"sourceRoot":""}