{"version":3,"file":"static/js/790.f56f7abb.chunk.js","mappings":"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","sources":["API/API.js","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","components/TrendList/TrendList.styled.js","components/TrendList/TrendList.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.js"],"sourcesContent":["import axios from 'axios';\n\nexport const fetchMovies = async () => {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/trending/movie/week?language=en-US&api_key=177d4c1777884d0207a8f9260a3ed0b2'\n    );\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const fetchMovieData = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?append_to_response=1&language=en-US`,\n      {\n        headers: {\n          Authorization:\n            'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxNzdkNGMxNzc3ODg0ZDAyMDdhOGY5MjYwYTNlZDBiMiIsInN1YiI6IjY1MzBmODQzMTEwOGE4MDBjOWI1ZDdmOCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.7jYvvySJFvZSG-WbSK1ZGl3FBUiXQ3Hl8nNqDdI8jQE',\n        },\n      }\n    );\n\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const fetchCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`,\n      {\n        headers: {\n          Authorization:\n            'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxNzdkNGMxNzc3ODg0ZDAyMDdhOGY5MjYwYTNlZDBiMiIsInN1YiI6IjY1MzBmODQzMTEwOGE4MDBjOWI1ZDdmOCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.7jYvvySJFvZSG-WbSK1ZGl3FBUiXQ3Hl8nNqDdI8jQE',\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchReviews = async movieId => {\n  const options = {\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxNzdkNGMxNzc3ODg0ZDAyMDdhOGY5MjYwYTNlZDBiMiIsInN1YiI6IjY1MzBmODQzMTEwOGE4MDBjOWI1ZDdmOCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.7jYvvySJFvZSG-WbSK1ZGl3FBUiXQ3Hl8nNqDdI8jQE',\n    },\n  };\n\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const fetchSearchFilms = async query => {\n  const options = {\n    headers: {\n      accept: 'application/json',\n    },\n    params: {\n      api_key: '177d4c1777884d0207a8f9260a3ed0b2',\n      query,\n    },\n  };\n\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/search/movie',\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n","import styled from '@emotion/styled';\n\nexport const SearchBarContainer = styled.form`\n  display: flex;\n  align-items: center;\n  margin: 16px 0;\n`;\n\nexport const Input = styled.input`\n  flex: 1;\n  padding: 10px;\n  font-size: 16px;\n`;\n\nexport const Button = styled.button`\n  background-color: #e50914;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: #ff3e46;\n  }\n`;\n","import { SearchBarContainer, Button, Input } from './SearchBar.styled';\nconst SearchBar = ({ onSubmit }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    const value = e.target[0].value; // Отримати значення з поля вводу\n\n    if (value.trim() === '') {\n      alert('Введіть значення!!!');\n    } else {\n      onSubmit(value.toLowerCase()); // Викликати обробник з введеним значенням\n    }\n  };\n\n  return (\n    <SearchBarContainer onSubmit={handleSubmit}>\n      <Input type=\"text\" />\n      <Button className=\"submit\">Search</Button>\n    </SearchBarContainer>\n  );\n};\nexport default SearchBar;\n","import styled from '@emotion/styled';\n\nexport const TrendListContainer = styled.ul`\n  list-style: none;\n  display: grid;\n  grid-template-columns: repeat(6, 1fr); /* Встановлюємо 6 колонок */\n  grid-gap: 10px;\n  padding: 20px 0;\n  margin: 0;\n`;\n\nexport const TrendListItem = styled.li`\n  background-color: #333;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  color: #fff;\n  font-size: 14px;\n  display: flex;\n  flex-direction: column;\n  a {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    text-decoration: none;\n    color: #fff;\n  }\n`;\n\nexport const ImageContainer = styled.div`\n  img {\n    width: 100%;\n    height: auto;\n    display: block;\n    border-radius: 8px 8px 0 0;\n  }\n`;\n\nexport const InfoContainer = styled.div`\n  padding: 10px;\n  font-size: 12px;\n  width: 100%;\n\n  p {\n    margin: 0;\n  }\n\n  p:first-of-type {\n    font-weight: bold;\n  }\n`;\n\nexport const Title = styled.p`\n  font-size: 16px;\n  margin-top: 10px;\n`;\n\nexport const Rating = styled.p`\n  font-size: 14px;\n  margin: 5px 0;\n`;\n\nexport const OriginalTitle = styled.p`\n  font-size: 14px;\n`;\n","import { Link, useLocation } from 'react-router-dom';\n\nimport {\n  TrendListContainer,\n  TrendListItem,\n  InfoContainer,\n  ImageContainer,\n  Title,\n  Rating,\n  OriginalTitle,\n} from './TrendList.styled.js';\nconst TrendList = ({ searchResults }) => {\n  const location = useLocation();\n  return (\n    <TrendListContainer>\n      {searchResults.map(result => (\n        <TrendListItem key={result.id}>\n          <Link to={`/movies/${result.id}`} state={{ from: location }}>\n            <ImageContainer>\n              <img\n                src={`https://image.tmdb.org/t/p/w500/${result.poster_path}`}\n                alt={result.title}\n              />\n            </ImageContainer>\n            <InfoContainer>\n              <Title>Title: {result.title}</Title>\n              <Rating>Rating: {result.vote_average}</Rating>\n              <OriginalTitle>\n                Original Title: {result.original_title}\n              </OriginalTitle>\n            </InfoContainer>\n          </Link>\n        </TrendListItem>\n      ))}\n    </TrendListContainer>\n  );\n};\n\nexport default TrendList;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MoviesContainer = styled.div`\n  background-color: #000;\n  color: #f60;\n  padding: 20px;\n`;\n\nexport const TrendListLink = styled(Link)`\n  color: #fff;\n  text-decoration: none;\n`;\n\nexport const TrendListLinkHover = styled(Link)`\n  color: #f60;\n  text-decoration: none;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchSearchFilms } from 'API/API';\nimport SearchBarComponent from 'components/SearchBar/SearchBar';\nimport TrendListComponent from 'components/TrendList/TrendList';\nimport { MoviesContainer } from './Movies.styled';\n\nconst Movies = () => {\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetchSearchFilms(query);\n        setSearchResults(response.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchData();\n  }, [query]);\n\n  const onSubmitForm = query => {\n    setSearchParams({ query });\n  };\n\n  return (\n    <MoviesContainer>\n      <SearchBarComponent onSubmit={onSubmitForm} className=\"search-bar\" />\n      <div>\n        {searchResults.length > 0 ? (\n          <TrendListComponent\n            searchResults={searchResults}\n            className=\"trend-list\"\n          />\n        ) : (\n          <p>Not found</p>\n        )}\n      </div>\n    </MoviesContainer>\n  );\n};\n\nexport default Movies;\n"],"names":["fetchMovies","axios","response","data","results","fetchMovieData","movieId","headers","Authorization","fetchCast","fetchReviews","options","accept","fetchSearchFilms","query","params","api_key","console","log","SearchBarContainer","styled","Input","Button","onSubmit","e","preventDefault","value","target","trim","alert","toLowerCase","type","className","TrendListContainer","TrendListItem","ImageContainer","InfoContainer","Title","Rating","OriginalTitle","searchResults","location","useLocation","map","result","to","id","state","from","src","poster_path","alt","title","vote_average","original_title","MoviesContainer","Link","useState","setSearchResults","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchData","length"],"sourceRoot":""}