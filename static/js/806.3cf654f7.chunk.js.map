{"version":3,"file":"static/js/806.3cf654f7.chunk.js","mappings":"8SAEaA,EAAW,mCAAG,6GAEAC,EAAAA,EAAAA,IACrB,4GAHqB,cAEjBC,EAFiB,yBAKhBA,EAASC,KAAKC,SALE,oGAAH,qDAUXC,EAAc,mCAAG,WAAMC,GAAN,gGAEHL,EAAAA,EAAAA,IAAA,6CACiBK,EADjB,wCAErB,CACEC,QAAS,CACPC,cACE,gOAPkB,cAEpBN,EAFoB,yBAYnBA,EAASC,MAZU,oGAAH,sDAiBdM,EAAS,mCAAG,WAAMH,GAAN,gGAEEL,EAAAA,EAAAA,IAAA,6CACiBK,EADjB,2BAErB,CACEC,QAAS,CACPC,cACE,gOAPa,cAEfN,EAFe,yBAWdA,EAASC,MAXK,oGAAH,sDAiBTO,EAAY,mCAAG,WAAMJ,GAAN,gFACpBK,EAAU,CACdJ,QAAS,CACPK,OAAQ,mBACRJ,cACE,+NALoB,kBAUDP,EAAAA,EAAAA,IAAA,6CACiBK,EADjB,kCAErBK,GAZsB,cAUlBT,EAVkB,yBAcjBA,EAASC,MAdQ,oGAAH,sDAmBZU,EAAgB,mCAAG,WAAMC,GAAN,gFACxBH,EAAU,CACdJ,QAAS,CACPK,OAAQ,oBAEVG,OAAQ,CACNC,QAAS,mCACTF,MAAAA,IAP0B,kBAYLb,EAAAA,EAAAA,IACrB,4CACAU,GAd0B,cAYtBT,EAZsB,yBAgBrBA,EAASC,MAhBY,sCAkB5Bc,QAAQC,IAAR,MAlB4B,8DAAH,qD,yIC/DhBC,EAAmBC,EAAAA,EAAAA,IAAH,0CAIhBC,EAAmBD,EAAAA,EAAAA,EAAH,mFAMhBE,EAAaF,EAAAA,EAAAA,GAAH,4DAKVG,EAAaH,EAAAA,EAAAA,GAAH,oHAOVI,EAAiBJ,EAAAA,EAAAA,EAAH,kFAMdK,EAAgBL,EAAAA,EAAAA,EAAH,4D,oCCmB1B,EArCgB,WACd,IAAQd,GAAYoB,EAAAA,EAAAA,MAAZpB,QACR,GAA8BqB,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEKrB,EAAAA,EAAAA,IAAaJ,GAFlB,OAERH,EAFQ,OAGd0B,EAAW1B,EAAKC,SAHF,gDAKda,QAAQC,IAAR,MALc,yDAAH,qDAQfa,GACD,GAAE,CAACzB,KAGF,SAACa,EAAD,UACsB,IAAnBS,EAAQI,QACP,SAACX,EAAD,yDAIA,SAACC,EAAD,UACGM,EAAQK,KAAI,SAAAC,GAAM,OACjB,UAACX,EAAD,YACE,UAACC,EAAD,sBACWU,EAAOC,eAAeC,aAEjC,SAACX,EAAD,UAAgBS,EAAOG,YAJRH,EAAOC,eAAeC,SADtB,OAY5B,C","sources":["API/API.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.js"],"sourcesContent":["import axios from 'axios';\n\nexport const fetchMovies = async () => {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/trending/movie/week?language=en-US&api_key=177d4c1777884d0207a8f9260a3ed0b2'\n    );\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const fetchMovieData = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?append_to_response=1&language=en-US`,\n      {\n        headers: {\n          Authorization:\n            'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxNzdkNGMxNzc3ODg0ZDAyMDdhOGY5MjYwYTNlZDBiMiIsInN1YiI6IjY1MzBmODQzMTEwOGE4MDBjOWI1ZDdmOCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.7jYvvySJFvZSG-WbSK1ZGl3FBUiXQ3Hl8nNqDdI8jQE',\n        },\n      }\n    );\n\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const fetchCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`,\n      {\n        headers: {\n          Authorization:\n            'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxNzdkNGMxNzc3ODg0ZDAyMDdhOGY5MjYwYTNlZDBiMiIsInN1YiI6IjY1MzBmODQzMTEwOGE4MDBjOWI1ZDdmOCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.7jYvvySJFvZSG-WbSK1ZGl3FBUiXQ3Hl8nNqDdI8jQE',\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchReviews = async movieId => {\n  const options = {\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxNzdkNGMxNzc3ODg0ZDAyMDdhOGY5MjYwYTNlZDBiMiIsInN1YiI6IjY1MzBmODQzMTEwOGE4MDBjOWI1ZDdmOCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.7jYvvySJFvZSG-WbSK1ZGl3FBUiXQ3Hl8nNqDdI8jQE',\n    },\n  };\n\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const fetchSearchFilms = async query => {\n  const options = {\n    headers: {\n      accept: 'application/json',\n    },\n    params: {\n      api_key: '177d4c1777884d0207a8f9260a3ed0b2',\n      query,\n    },\n  };\n\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/search/movie',\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n","import styled from '@emotion/styled';\n\nexport const ReviewsContainer = styled.div`\n  padding: 20px;\n`;\n\nexport const NoReviewsMessage = styled.p`\n  font-size: 16px;\n  color: #fff;\n  text-align: center;\n`;\n\nexport const ReviewList = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nexport const ReviewItem = styled.li`\n  background-color: #333;\n  border-radius: 8px;\n  margin-bottom: 20px;\n  padding: 10px;\n`;\n\nexport const AuthorUsername = styled.p`\n  font-size: 16px;\n  font-weight: bold;\n  color: #fff;\n`;\n\nexport const ReviewContent = styled.p`\n  font-size: 16px;\n  color: #fff;\n`;\n","import {\n  ReviewList,\n  ReviewContent,\n  ReviewItem,\n  AuthorUsername,\n  NoReviewsMessage,\n  ReviewsContainer,\n} from './Reviews.styled.js';\nimport { fetchReviews } from 'API/API';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [authors, setAuthors] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await fetchReviews(movieId);\n        setAuthors(data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <ReviewsContainer>\n      {authors.length === 0 ? (\n        <NoReviewsMessage>\n          We don't have any reviews for this movie.\n        </NoReviewsMessage>\n      ) : (\n        <ReviewList>\n          {authors.map(author => (\n            <ReviewItem key={author.author_details.username}>\n              <AuthorUsername>\n                Author: {author.author_details.username}\n              </AuthorUsername>\n              <ReviewContent>{author.content}</ReviewContent>\n            </ReviewItem>\n          ))}\n        </ReviewList>\n      )}\n    </ReviewsContainer>\n  );\n};\nexport default Reviews;\n"],"names":["fetchMovies","axios","response","data","results","fetchMovieData","movieId","headers","Authorization","fetchCast","fetchReviews","options","accept","fetchSearchFilms","query","params","api_key","console","log","ReviewsContainer","styled","NoReviewsMessage","ReviewList","ReviewItem","AuthorUsername","ReviewContent","useParams","useState","authors","setAuthors","useEffect","fetchData","length","map","author","author_details","username","content"],"sourceRoot":""}